[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://textures/test.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D noise_tex : hint_white;
uniform sampler2D pattern_tex : hint_white;
uniform sampler2D gradient_tex : hint_white;

uniform float speed = 1.0;
uniform float strength = 1.0;


void fragment( )
{

	vec4 noise = texture(noise_tex, UV + vec2(1.0, TIME * speed * 1.5));
	vec4 gradient = texture(gradient_tex, vec2(1.0 - UV.y, 0));
	vec4 pattern = texture(pattern_tex, UV + vec2(1.0, TIME * speed));
	
	float noise_fac = UV.y * noise.r * strength;
	vec4 color = gradient * pattern;

	COLOR = color * noise_fac;
}
"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.104, 0.245333, 1 )
colors = PoolColorArray( 1, 0.882353, 0.458824, 1, 0.541176, 0.4, 0.286275, 1, 0.317647, 0.231373, 0.239216, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]
period = 44.0
persistence = 0.2
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[resource]
shader = SubResource( 1 )
shader_param/speed = 0.05
shader_param/strength = 1.6
shader_param/noise_tex = SubResource( 5 )
shader_param/pattern_tex = ExtResource( 1 )
shader_param/gradient_tex = SubResource( 3 )
