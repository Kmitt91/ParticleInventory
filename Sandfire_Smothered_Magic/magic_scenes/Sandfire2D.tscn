[gd_scene load_steps=17 format=2]

[ext_resource path="res://materials/Sandfire.tres" type="Material" id=1]
[ext_resource path="res://textures/circular_mask.png" type="Texture" id=2]
[ext_resource path="res://textures/Gradients/SandfireGradient.tres" type="Texture" id=3]
[ext_resource path="res://textures/magic_masks/particle_sand.png" type="Texture" id=4]

[sub_resource type="Curve" id=1]
_data = [ Vector2( 0, 0.736364 ), 0.0, 2.58843, 0, 0, Vector2( 1, 1 ), -0.84878, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=2]
width = 512
curve = SubResource( 1 )

[sub_resource type="ParticlesMaterial" id=3]
lifetime_randomness = 0.8
flag_disable_z = true
direction = Vector3( 0, -1, 0 )
gravity = Vector3( 0, -400, 0 )
initial_velocity = 50.0
angular_velocity = 90.0
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
angle = 30.0
angle_random = 1.0
scale = 2.0
scale_random = 1.0
scale_curve = SubResource( 2 )
color_ramp = ExtResource( 3 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D noise_texture;
uniform sampler2D texture_mask;

uniform float emission_intensity = 2.0;
uniform float time_scale = 1.0;
uniform vec2 texture_scale = vec2(1.0);
uniform float edge_softness = 0.1;


void fragment() {
	
	vec2 base_uv = UV * texture_scale;
	vec2 time_based_pan = vec2(0.2, 1.0) * (- TIME * time_scale);
	
	vec4 mask = texture(texture_mask, UV);
	vec4 noise = texture(noise_texture, base_uv + time_based_pan);
	
	
	
	
	vec4 col = COLOR * mask * noise.r;
	
	
	float erosion_amount = (1.0 - COLOR.a);
	float alpha = (noise.r * mask.r) - erosion_amount;
	alpha = clamp(alpha, 0.0, 1.0);
	
	
	COLOR = col * emission_intensity * smoothstep(0.0, edge_softness, alpha);
	
	
}"

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=6]
width = 128
height = 128
seamless = true
noise = SubResource( 5 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 4 )
shader_param/emission_intensity = 2.0
shader_param/time_scale = 0.5
shader_param/texture_scale = Vector2( 0.75, 0.75 )
shader_param/edge_softness = 0.1
shader_param/noise_texture = SubResource( 6 )
shader_param/texture_mask = ExtResource( 4 )

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0, 0.174785, 0.796562, 1 )
colors = PoolColorArray( 0, 0, 0, 0, 0.541176, 0.4, 0.286275, 1, 0.317647, 0.231373, 0.239216, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )
width = 1024

[sub_resource type="Curve" id=10]
_data = [ Vector2( 0, 0 ), 0.0, 1.14581, 0, 0, Vector2( 1, 1 ), -1.55381, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=11]
width = 512
curve = SubResource( 10 )

[sub_resource type="ParticlesMaterial" id=12]
flag_disable_z = true
direction = Vector3( 0, -1, 0 )
spread = 180.0
gravity = Vector3( 0, -200, 0 )
initial_velocity = 50.0
initial_velocity_random = 1.0
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
angle = 360.0
angle_random = 1.0
scale = 4.0
scale_random = 0.5
scale_curve = SubResource( 11 )
color_ramp = SubResource( 9 )

[node name="Sandfire2D" type="Particles2D"]
material = ExtResource( 1 )
scale = Vector2( 1.25, 1.25 )
amount = 64
lifetime = 1.2
randomness = 0.75
draw_order = 1
process_material = SubResource( 3 )
texture = ExtResource( 2 )

[node name="Sand2D" type="Particles2D" parent="."]
material = SubResource( 7 )
z_index = -1
lifetime = 2.0
speed_scale = 0.5
randomness = 1.0
draw_order = 1
process_material = SubResource( 12 )
texture = ExtResource( 2 )
